<h1>Tic Tac Toe</h1>

<script type="text/javascript">
//PUSHER
  var pusherKey = '<%= Rails.configuration.pusher[:key] %>';
  var pusherCluster = '<%= Rails.configuration.pusher[:cluster] %>';
  var eventName = 'my-event';
  $( document ).ready(function() {
    var pusher = new Pusher(pusherKey, {
      cluster: pusherCluster
    });
    var channel = pusher.subscribe("my-channel");
    channel.bind(eventName, (data) => {
      (data);
    });
  });
  function sendMessage() {
    $.post( "/push/send_message", {eventName: eventName, username: $('#username').val(), message: $('#message').val()}, function( data ) {
      //console.log("Submitted");

    });
  }

  function addMessageLog(username, message) {
    var msg = new Date() + "\nSent by: " + (username == $('#username').val() ? "ME" : "OPPONENT") + "\n" + message + "\n\n" + $('#messages').val()
    $('#messages').val(msg);
  } 

  $( document ).ready(function() {
    var pusher = new Pusher(pusherKey, {
      cluster: pusherCluster
    });
    var channel = pusher.subscribe("my-channel");
    channel.bind('my-event', (data) => {
      processPushData(data);
    });
  });

  function processPushData(data) {
    //addMessageLog(data.username, data.message);
    //console.log(data);
    if (data.player != whoAmI && data.type == 'move') {
      makeMove('network', data.row, data.col);
    }
  }

  function sendMoveToOpponent(row, col) {
    var payload = {
      data: {type: 'move', player: whoAmI, row: row, col: col}
    };
    $.post( "/push/send_message", payload, function( data ) {
      //console.log("Submitted");
    });
    processPushData(payload);
  }

  //TIC TAC TOE CODE
  var imageX = "https://e7.pngegg.com/pngimages/255/685/png-clipart-tic-tac-toe-computer-icons-others-miscellaneous-angle.png";
  var imageO = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTJpTHLs03dWD8fSlVnypMoalGfITxPtNWiPA&s";
  var isX = true;
  const board = [["","",""],["","",""],["","",""]];
  var whoAmI = null;
  isGameOver = false;

  function setWhoAmI() {
    whoAmI = document.getElementById('username').value;
  }

  function initializeBoard() {
    for (var i = 1; i <= 3; i++) {
      for (var j = 1; j <= 3; j++) {
        board[i-1][j-1] = "";
      }
    }
    isX = true;
    displayBoard();
  }

  function displayBoard() {
    var cellID;
    for (var i = 1; i <= 3; i++) {
      for (var j = 1; j <= 3; j++) {
        cellID = createCellId(i,j);
        if (board[i-1][j-1] == "X") {
          document.getElementById(cellID).innerHTML = "<img height='150px' width='150px' src='" + imageX + "'/>";
        } else if (board[i-1][j-1] == "O") {
          document.getElementById(cellID).innerHTML = "<img height='150px' width='150px' src='" + imageO + "'/>";
        } else {
          document.getElementById(cellID).innerHTML = "";
        }
      }
    }
  }

  function createCellId(row, col) {
    return ("cell" + row + col);
  } 

  function whoseTurn(isX) {
    var val;
    val = (isX) ? val = "X" : val = "O";
    return val;
  }

  function changeTurn(isX) {
    var val;
    val = (isX == true) ? isX = false : isX = true;
    return val;
  }

  function makeMove(source, row, col) {
    if (!isGameOver) {
      if (source == 'local' && (whoAmI == "X" && isX) || (whoAmI == "O" && !isX)) {
        var turn = whoseTurn(isX);
        if (board[row-1][col-1] == "") {
          board[row-1][col-1] = turn;
          sendMoveToOpponent(row, col);
          displayBoard();
          isX = changeTurn(isX);
        }
      } else if (source == 'network' && whoAmI != turn) {
          var turn = whoseTurn(isX);
          board[row-1][col-1] = turn;
          displayBoard();
          isX = changeTurn(isX);
      }
      checkForWin();
    }
  }

  function checkForWin() {
    //Checking rows
    checkCoordinates(1, 1, 1, 2, 1, 3);
    checkCoordinates(2, 1, 2, 2, 2, 3);
    checkCoordinates(3, 1, 3, 2, 3, 3);
    //Checking columns
    checkCoordinates(1, 1, 2, 1, 3, 1);
    checkCoordinates(1, 2, 2, 2, 3, 2);
    checkCoordinates(1, 3, 2, 3, 3, 3);
    //Checking diagonal
    checkCoordinates(1, 1, 2, 2, 3, 3);
    checkCoordinates(1, 3, 2, 2, 3, 1);
  }

  function checkCoordinates(x1, y1, x2, y2, x3, y3) {
    if (board[x1-1][y1-1] == board[x2-1][y2-1] && board[x3-1][y3-1] == board[x1-1][y1-1] && board[x1-1][y1-1] != "") {
      isGameOver = true;
      if (whoAmI == board[x1-1][y1-1]) {
        alert("You WON!")
      } else {
        alert("You lost");
      }
    }
  }

</script>

UserName: <input name="username" id="username" type="text" onchange="setWhoAmI()">
<br />
<br />
Message: <input name="message" id="message" type="text">
<input type="button" value="Send" onclick="sendMessage()" />
<br />
<br />
<textarea id="messages" cols="500" rows="20"></textarea>

<!-- Reset Button -->
<button type="button" onclick="initializeBoard()">Reset</button>
<br />
<br />

<!-- Game Board -->
<table>
  <tr>
    <td>
      <table border="1">
        <tr>
          <td id="cell11" height="150px" width="150px" onclick="makeMove('local', 1, 1)"></td>
          <td id="cell12" height="150px" width="150px" onclick="makeMove('local', 1, 2)"></td>
          <td id="cell13" height="150px" width="150px" onclick="makeMove('local', 1, 3)"></td>
        </tr>
        <tr>
          <td id="cell21" height="150px" width="150px" onclick="makeMove('local', 2, 1)"></td>
          <td id="cell22" height="150px" width="150px" onclick="makeMove('local', 2, 2)"></td>
          <td id="cell23" height="150px" width="150px" onclick="makeMove('local', 2, 3)"></td>
        </tr>
        <tr>
          <td id="cell31" height="150px" width="150px" onclick="makeMove('local', 3, 1)"></td>
          <td id="cell32" height="150px" width="150px" onclick="makeMove('local', 3, 2)"></td>
          <td id="cell33" height="150px" width="150px" onclick="makeMove('local', 3, 3)"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>